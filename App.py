__author__ = 'nikhil'
#!flask/bin/python
#from bottle import Flask

from bottle import request,route,static_file,run
import data_consolidation as dc
import solution as randomForestRun
import shutil

import os
import gzip

project_path = '/home/voldy/PycharmProjects/MalwareClassify/'

@route('/uploads', method='POST')
def results():

    deleteFiles()

    category = request.forms.get('category')
    upload = request.files.get('upload')
    print upload

    save_path = project_path+"data/consolidate_op/test/".format(category=category)
    if not os.path.exists(save_path):
        os.makedirs(save_path)

    file_path = "{path}/{file}".format(path=save_path,file=upload.filename)

    # Save file to local system
    upload.save(file_path)

    #Read file
    inF = file(file_path, 'rb')
    s = inF.read()
    inF.close()

    #Write it in .gz format for further processing
    outF = gzip.GzipFile(file_path+".gz", 'wb')
    outF.write(s)
    outF.close()


    print "File upload success"

    # Consolidate the .gz file to create test and train data
    print save_path
    dc.consolidate(save_path)

    #Run the random Forest
    randomForestRun.randomForest()

    return "Check output directory for csv"


def deleteFiles():
    #Remove output and test folder
    #shutil.rmtree(project_path+'data/consolidate_op/test')
    #shutil.rmtree(project_path+'data/output')



    shutil.rmtree(os.path.join(project_path,'data/consolidate_op/test'))
    shutil.rmtree(os.path.join(project_path,'data/output'))
    #Re create them
    #os.makedirs(project_path+'data/consolidate_op/test')
    #os.makedirs(project_path+'data/output')


    os.makedirs(os.path.join(project_path,'data/consolidate_op/test'))
    os.makedirs(os.path.join(project_path,'data/output'))


if __name__ == '__main__':
    run(host='localhost',port =8080)
